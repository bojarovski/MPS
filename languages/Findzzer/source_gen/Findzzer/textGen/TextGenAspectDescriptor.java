package Findzzer.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import Findzzer.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.Components:
        return new Components_TextGen();
      case LanguageConceptSwitch.DataTable:
        return new DataTable_TextGen();
      case LanguageConceptSwitch.Findzzer:
        return new Findzzer_TextGen();
      case LanguageConceptSwitch.Settings:
        return new Settings_TextGen();
      case LanguageConceptSwitch.View:
        return new View_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(CONCEPTS.Findzzer$i2)) {
        String fname = getFileName_Findzzer(root);
        String ext = getFileExtension_Findzzer(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), getPath_Findzzer(root), root);
        continue;
      }
    }
  }
  private static String getFileName_Findzzer(SNode node) {
    return SPropertyOperations.getString(node, PROPS.dsl_name$d0kX);
  }
  private static String getFileExtension_Findzzer(SNode node) {
    return "js";
  }
  private static String getPath_Findzzer(SNode node) {
    return "myNote/";
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Findzzer$i2 = MetaAdapterFactory.getConcept(0xf4fcfb4c57c745ceL, 0xa8ab88347bde635aL, 0x6d40fd6461735b05L, "Findzzer.structure.Findzzer");
  }

  private static final class PROPS {
    /*package*/ static final SProperty dsl_name$d0kX = MetaAdapterFactory.getProperty(0xf4fcfb4c57c745ceL, 0xa8ab88347bde635aL, 0x6d40fd6461735b05L, 0x5b76049df638caebL, "dsl_name");
  }
}
