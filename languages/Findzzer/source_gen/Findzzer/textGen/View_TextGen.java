package Findzzer.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class View_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("=======================MAIN====================================================================================");
    tgs.newLine();

    if (SPropertyOperations.getInteger(ctx.getPrimaryInput(), PROPS.version$DjQp) == 1) {
      tgs.append("<template>\n  <v-app id=\"unique-layout\">\n    <!-- Header with logo and profile section -->\n    <v-container fluid class=\"header-container\">\n      <v-row align=\"center\" justify=\"space-between\">\n        <v-col class=\"d-flex align-center\" cols=\"auto\">\n          <v-img src=\"@/assets/logo.png\" max-width=\"40\" alt=\"Logo\" />\n          <h2 class=\"ml-4\">UniqueApp</h2>\n        </v-col>\n\n        <v-col class=\"d-flex justify-end\" cols=\"auto\">\n          <v-btn v-if=\"!isLoggedIn\" @click=\"navigateToLogin\" color=\"primary\"\n            >Log In</v-btn\n          >\n          <v-btn v-else @click=\"userLogout\" color=\"secondary\">Log Out</v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <!-- Main content area -->\n    <v-main>\n      <v-container>\n        <v-row>\n          <!-- Buttons to navigate to different sections -->\n          <v-col\n            v-for=\"(section, index) in sections\"\n            :key=\"index\"\n            cols=\"12\"\n            sm=\"6\"\n            md=\"4\"\n          >\n            <v-card\n              @click=\"navigateToSection(section.route)\"\n              class=\"hoverable elevation-12\"\n              outlined\n            >\n              <v-card-title>\n                <v-icon>{{ section.icon }}</v-icon>\n                <span class=\"ml-2\">{{ section.label }}</span>\n              </v-card-title>\n              <v-card-actions>\n                <v-btn color=\"primary\">Go to {{ section.label }}</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n      <router-view />\n    </v-main>\n\n    <!-- Footer with simple contact info -->\n    <v-footer color=\"grey darken-4\" padless>\n      <v-container class=\"text-center py-4\">\n        <p class=\"white--text\">&copy; 2024 UniqueApp. All rights reserved.</p>\n        <p class=\"white--text\">\n          Email:\n          <a href=\"mailto:support@uniqueapp.com\" class=\"white--text\"\n            >support@uniqueapp.com</a\n          >\n        </p>\n      </v-container>\n    </v-footer>\n  </v-app>\n</template>\n\n<script>\nimport { onMounted, ref, watch } from \"vue\";\nimport { useAppStore } from \"@/stores/app\";\nimport { setAuthToken } from \"./plugins/axios\";\n\nexport default {\n  setup() {\n    // Drawer state\n    const drawer = ref(true);\n    const token = ref(null);\n    const appStore = useAppStore();\n\n    onMounted(() => {\n      const storedToken = localStorage.getItem(\"token\");\n      if (storedToken) {\n        setAuthToken(storedToken); // Set token in the store\n      }\n    }); // Initialize the Pinia store\n    watch(\n      () => appStore.token, // Watch the `token` property\n      (newToken, oldToken) => {\n        token.value = newToken;\n        console.log(\"Token changed from\", oldToken, \"to\", newToken);\n      }\n    );\n    // Navigation links\n    const links = [\n      [\"mdi-view-dashboard-outline\", \"Dashboard\", \"/\"],\n      [\"mdi-fridge-outline\", \"Fridges\", \"/fridge\"],\n      [\"mdi-view-list-outline\", \"Categories\", \"/category\"],\n      [\"mdi-account-outline\", \"Dilers\", \"/dieler\"],\n      [\"mdi-account-cog-outline\", \"Profile\", \"/profile\"],\n    ];\n\n    // Logout method\n    const logout = async () => {\n      try {\n        this.$router.push({ name: \"Login\" }); // Uncomment if you're using Vue Router\n        await appStore.logout(); // Use appStore directly\n        // Redirect to login page after successful logout\n        // You can use router.push here to navigate to login page if needed\n      } catch (err) {\n        console.log(err || \"Log Out failed. Please try again.\");\n      }\n    };\n\n    return {\n      drawer,\n      links,\n      logout,\n    };\n  },\n};\n</script>\n");
    }
    if (SPropertyOperations.getInteger(ctx.getPrimaryInput(), PROPS.version$DjQp) == 2) {
      tgs.append("<template>\n  <v-app id=\"unique-layout\">\n    <!-- Header with logo and profile section -->\n    <v-container fluid class=\"header-container\">\n      <v-row align=\"center\" justify=\"space-between\">\n        <v-col class=\"d-flex align-center\" cols=\"auto\">\n          <v-img src=\"@/assets/logo.png\" max-width=\"40\" alt=\"Logo\" />\n          <h2 class=\"ml-4\">UniqueApp</h2>\n        </v-col>\n\n        <v-col class=\"d-flex justify-end\" cols=\"auto\">\n          <v-btn v-if=\"!isLoggedIn\" @click=\"navigateToLogin\" color=\"primary\"\n            >Log In</v-btn\n          >\n          <v-btn v-else @click=\"userLogout\" color=\"secondary\">Log Out</v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <!-- Main content area -->\n    <v-main>\n      <v-container>\n        <v-row>\n          <!-- Buttons to navigate to different sections -->\n          <v-col\n            v-for=\"(section, index) in sections\"\n            :key=\"index\"\n            cols=\"12\"\n            sm=\"6\"\n            md=\"4\"\n          >\n            <v-card\n              @click=\"navigateToSection(section.route)\"\n              class=\"hoverable elevation-12\"\n              outlined\n            >\n              <v-card-title>\n                <v-icon>{{ section.icon }}</v-icon>\n                <span class=\"ml-2\">{{ section.label }}</span>\n              </v-card-title>\n              <v-card-actions>\n                <v-btn color=\"primary\">Go to {{ section.label }}</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n      <router-view />\n    </v-main>\n\n    <!-- Footer with simple contact info -->\n    <v-footer color=\"grey darken-4\" padless>\n      <v-container class=\"text-center py-4\">\n        <p class=\"white--text\">&copy; 2024 UniqueApp. All rights reserved.</p>\n        <p class=\"white--text\">\n          Email:\n          <a href=\"mailto:support@uniqueapp.com\" class=\"white--text\"\n            >support@uniqueapp.com</a\n          >\n        </p>\n      </v-container>\n    </v-footer>\n  </v-app>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const isLoggedIn = ref(false);\n    const sections = [\n      { icon: \"mdi-view-dashboard-outline\", label: \"Dashboard\", route: \"/\" },\n      { icon: \"mdi-fridge-outline\", label: \"Fridges\", route: \"/fridge\" },\n      {\n        icon: \"mdi-view-list-outline\",\n        label: \"Categories\",\n        route: \"/category\",\n      },\n      { icon: \"mdi-account-outline\", label: \"Dilers\", route: \"/dieler\" },\n      { icon: \"mdi-account-cog-outline\", label: \"Profile\", route: \"/profile\" },\n    ];\n    const links = [\n      [\"mdi-view-dashboard-outline\", \"Dashboard\", \"/\"],\n      [\"mdi-fridge-outline\", \"Fridges\", \"/fridge\"],\n      [\"mdi-view-list-outline\", \"Categories\", \"/category\"],\n      [\"mdi-account-outline\", \"Dilers\", \"/dieler\"],\n      [\"mdi-account-cog-outline\", \"Profile\", \"/profile\"],\n    ];\n    onMounted(() => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        isLoggedIn.value = true;\n      }\n    });\n\n    const navigateToLogin = () => {\n      router.push({ name: \"Login\" });\n    };\n\n    const userLogout = () => {\n      localStorage.removeItem(\"token\");\n      isLoggedIn.value = false;\n      router.push({ name: \"Login\" });\n    };\n\n    const navigateToSection = (route) => {\n      router.push(route);\n    };\n\n    return {\n      isLoggedIn,\n      sections,\n      navigateToLogin,\n      userLogout,\n      navigateToSection,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Styling for header */\n.header-container {\n  background: linear-gradient(45deg, #4caf50, #3e8e41);\n  padding: 20px 16px;\n  border-radius: 8px;\n}\n\n.header-container h2 {\n  color: white;\n}\n\n.v-card {\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  border-radius: 8px;\n}\n\n.v-card:hover {\n  transform: scale(1.05);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n\n.v-footer {\n  background-color: #2d2d2d;\n}\n\n.v-footer p {\n  color: white;\n  font-size: 14px;\n}\n\n.v-btn {\n  margin-top: 10px;\n}\n\n.white--text a {\n  color: #ffffff;\n  text-decoration: none;\n}\n\n.white--text a:hover {\n  text-decoration: underline;\n}\n\n.v-btn:hover {\n  background-color: #ff4081;\n}\n</style>\n");
    }
    if (SPropertyOperations.getInteger(ctx.getPrimaryInput(), PROPS.version$DjQp) == 3) {
      tgs.append("<template>\n  <v-app id=\"inspire\">\n    <!-- Top Navigation Bar -->\n    <v-app-bar app color=\"blue darken-2\" dark>\n      <v-toolbar-title>My App</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <!-- Navigation Links -->\n      <v-tabs v-model=\"currentTab\" align-with-title>\n        <v-tab\n          v-for=\"[icon, text, route] in links\"\n          :key=\"route\"\n          @click=\"navigate(route)\"\n        >\n          <v-icon left>{{ icon }}</v-icon>\n          {{ text }}\n        </v-tab>\n      </v-tabs>\n\n      <!-- User Info or Login Button -->\n      <v-btn v-if=\"!isLoggedIn\" text @click=\"goToLogin\"> Log out </v-btn>\n      <v-btn v-else icon @click=\"logout\">\n        <v-avatar color=\"blue lighten-2\" size=\"32\">\n          <span class=\"white--text\">JD</span>\n        </v-avatar>\n      </v-btn>\n    </v-app-bar>\n\n    <!-- Content Area -->\n    <v-main>\n      <v-container>\n        <!-- New Segment Section -->\n        <v-card>\n          <!-- Main Router View -->\n          <router-view />\n        </v-card>\n      </v-container>\n    </v-main>\n\n    <!-- Footer -->\n    <v-footer color=\"blue darken-2\" padless>\n      <v-container>\n        <v-row justify=\"space-between\" align=\"center\">\n          <!-- Left Section: About Info -->\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\n            <h3 class=\"text-h6\">About My App</h3>\n            <p>\n              My App is your go-to solution for managing your fridges,\n              categories, and more with ease. Stay organized and efficient with\n              our intuitive platform.\n            </p>\n          </v-col>\n\n          <!-- Center Section: Quick Links -->\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\n            <h3 class=\"text-h6\">Quick Links</h3>\n            <ul class=\"list-none pa-0\">\n              <li><a href=\"/\" class=\"text-decoration-none\">Dashboard</a></li>\n              <li>\n                <a href=\"/fridge\" class=\"text-decoration-none\">Fridges</a>\n              </li>\n              <li>\n                <a href=\"/category\" class=\"text-decoration-none\">Categories</a>\n              </li>\n              <li><a href=\"/dieler\" class=\"text-decoration-none\">Dilers</a></li>\n            </ul>\n          </v-col>\n\n          <!-- Right Section: Contact Info -->\n          <v-col cols=\"12\" sm=\"6\" md=\"4\" class=\"text-right\">\n            <h3 class=\"text-h6\">Contact Us</h3>\n            <p>\n              Email: <a href=\"mailto:support@myapp.com\">support@myapp.com</a\n              ><br />\n              Phone: +1-234-567-890\n            </p>\n            <div>\n              <v-btn icon>\n                <v-icon>mdi-facebook</v-icon>\n              </v-btn>\n              <v-btn icon>\n                <v-icon>mdi-twitter</v-icon>\n              </v-btn>\n              <v-btn icon>\n                <v-icon>mdi-instagram</v-icon>\n              </v-btn>\n            </div>\n          </v-col>\n        </v-row>\n\n        <!-- Bottom Bar -->\n        <v-divider></v-divider>\n        <v-row justify=\"center\" class=\"mt-2\">\n          <span>© 2024 My App. All rights reserved.</span>\n        </v-row>\n      </v-container>\n    </v-footer>\n  </v-app>\n</template>");
    }
    tgs.newLine();
    tgs.newLine();
    tgs.newLine();
    tgs.newLine();





    for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.Component$ZVy9)) {
      tgs.appendNode(item);
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty version$DjQp = MetaAdapterFactory.getProperty(0xf4fcfb4c57c745ceL, 0xa8ab88347bde635aL, 0x34a67cda660d35a8L, 0x34a67cda660d35acL, "version");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink Component$ZVy9 = MetaAdapterFactory.getContainmentLink(0xf4fcfb4c57c745ceL, 0xa8ab88347bde635aL, 0x34a67cda660d35a8L, 0x504507f2c95684eaL, "Component");
  }
}
